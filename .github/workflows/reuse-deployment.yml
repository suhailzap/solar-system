name: Deployment - Reusable Workflow

on:
  workflow_call:
    inputs:
      MONGO_URI:
        required: true
        type: string
      k8s-manifests-directory:
        description: provide the directory where k8s manifests are stored
        default: kubernetes/
        required: true
        type: string
      environment:
        description: provide the Deployment Environment name
        default: development
        required: true
        type: string
    secrets:
      KUBE_CONFIG:
        required: true
      MONGO_PASSWORD:
        required: true
    outputs:
        APP_INGRESS_URL:
            value: ${{ jobs.reuse-deploy.outputs.APP_INGRESS_URL }}
jobs:
  reuse-deploy:
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
    outputs:
      APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
    runs-on: [self-hosted, linux, prod] # Use your self-hosted runner instead of ubuntu-latest if using k3s
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .kube directory (if not exists)
        run: mkdir -p $HOME/.kube

      - name: Set Kubeconfig from Secret
        run: echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Fetch K8s Cluster Details
        run: |
          export KUBECONFIG=$HOME/.kube/config
          kubectl version
          echo "--------------------------------------"
          kubectl get nodes

      - name: Create development namespace if not exists
        run: kubectl create namespace ${{ vars.NAMESPACE }} || true

      - name: Set Ingress IP as Environment Variable
        run: |
          export INGRESS_IP=$(kubectl get service traefik -n kube-system -o=jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo $INGRESS_IP
          echo "INGRESS_IP=$INGRESS_IP" >> $GITHUB_ENV

      - name: Replace Tokens in Manifest Files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["${{ inputs.k8s-manifests-directory }}/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}

      - name: Check files
        run: |
          cat ${{ inputs.k8s-manifests-directory }}/*.yaml

      - name: Create MongoDB Secret
        run: |
          kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ inputs.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -

      - name: Deploy to DEV Environment
        run: |
          kubectl apply -f ${{ inputs.k8s-manifests-directory }}

      - name: Set App Ingress Host URL
        id: set-ingress-host-address
        run: |
          APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress solar-system -o jsonpath='{.spec.rules[0].host}')
          echo "APP_INGRESS_HOST=$APP_INGRESS_HOST" >> $GITHUB_ENV 
          echo "APP_INGRESS_HOST=$APP_INGRESS_HOST" >> $GITHUB_OUTPUT